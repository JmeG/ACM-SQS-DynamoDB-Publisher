env:
  global:
    - DIST_DIR="${PWD}/dist"
    - PROJECT_NAME=$(basename ${PWD})
    - ARTIFACT_ID="${TRAVIS_COMMIT}-${TRAVIS_BUILD_NUMBER}"
    - S3_BUCKET="serverlessops-opensource-deploy-prod"
    - S3_BUILD_PREFIX="${PROJECT_NAME}/${ARTIFACT_ID}/build"
    - S3_DEPLOY_PREFIX="${PROJECT_NAME}/${ARTIFACT_ID}/deploy"
      S3_DEPLOY_ARTIFACT="${S3_DEPLOY_PREFIX}/${PROJECT_NAME}.zip"
    - AWS_SAM_TMPL_NAME="sam-template.yml"
    - AWS_CFN_TMPL_NAME="cfn-template.yml"
    - AWS_DEFAULT_REGION="us-east-1"
    - AWS_ADM_STACK_NAME="aws-serverless-repository-ApplicationCostMonitoring"
    # AWS_ACCESS_KEY_ID
    - secure: "gP5+HI5IFUdqreyslAloab+beGy3XbPs7Xvb8m8ldx7WqWIl28piw/rJE/0M/ANwcvt0bBengFMm42jwm3jpZ7OjjsyMM+N2goZHJvcTByJtCQZgQubp9CBrc4qz8E02KQB6vEYfg5iqXxVgSf+ZibL6Dqe6fO5+Hy2i/2BVoleWvGGkAcB060E4KSjUrH/N3uBE3bDtZfi4hRBSzF8v74EFRgUqkcoqpikBn/Wju/J+HBJkyIR9Lzzw0N+VQSrpyCoTWWAQBALP/PZhobtxLGEAXgYFyO0e3lvGCFH1nfATXDEyViuytarebW7TGn+lm5tYiy4VOU42fhjymEMlb7FmfpQ/3C3dS+I37Dh5DCyeazMCEHvbgwvgFevxLjNdCUpOFkxBrc7onsSqrQ7LUy76QSwmIz1E+H1fVJLB88Al7ELjnm6K2CChgY+m71IrbOCYlA6tG+RoQMHHY+QRsuUzBcQkw0FZjS+6lkcEEGeMMfry7ymOlp9RFlMutrs2yEk0uo1zAHKNC5uPMDpAVXGcwTaj+bFYaZFHy1mst7GcLbJ5weLLuyi0j4BzcR4bputuXtTZu45JYcDG7w7Dv+kJujYc/40XWcbD7LYpc6WP3fnT93pzOHCSfYYCoCRtGSdZJyB4xMdD1vfpfux0zoEWDTSYKwbSSjm54TUshLg="
    # AWS_SECRET_ACCESS_KEY
    - secure: "kExyw9iTXX78FXvA5Ldhm/IIOhwOnBBoKvTMX6QBM9FkO+CHfGD624gxV2lduiGGXFFmzeShdkyd8FgsgHx4zhXuMGbm0Zg0mbljdz2N6ngB1jUQp9wyQnofreG2miOHEt+Ls5osoMZVxXnk1atMm/hDraJeKPAIPTMOE1Si/28E/wJVbG90qQBtzwFLCY8H3fuktIue2zxP+Yhe1Popabbn8MvgQKeEF6A/Bfi8S95Ink0QFI2qcU1RJdYmyUneS/YZCXIFJ7NkpvQxgHlLxarV2xrlbxEP5IGgnVNZB1Bxmhje65mkbAt5IiVcwIXFlbJAKxjlysFlhrprYIC062QpXoia7Pzc0nZSzd5uFaXYDpGIs2mtuOTSnxZLDgVTFLNy2dsJcSb63EKIoDOJlVn9PMf/mOslM/LAfbi0HQ09J55n/PQ+hVImBb6rwUYXLMZGLsSLUbjxA7m0hgvm6jOWIcq3lZI4srefJXEKkOHZE0Fej4W5jWBlD+l5rFIz3EX+HN31d8MSKkCCrq51xeZBuHgd9jrIa7akURRJpQLHK0Z//+mtOMys3NnXzugYqNve7ZA5dm6nIxGLV7RTprlLdYaLrFLX1k5mBwij9x9yyU4aEAdW5kVvLrdpWnjaixNv13SNWVpqyB73cy0hycGMMVT1hmZFZLa4rGiD6vY="

stages:
  - build
  - artifact
  - name: promote
    if: branch = master

jobs:
  include:
    - stage: build
      sudo: required
      services:
        - docker
      language: python
      python: '3.6'
      install:
        - npm install -g serverless
        - npm install
      script:
        - sls package -v -s dev -r us-east-1 -p $DIST_DIR
        - cp serverless.yml $DIST_DIR
        # python-requirements directory
        - rm -rf ${DIST_DIR}/requirements
      deploy:
        - provider: s3
          skip_cleanup: true
          bucket: "$S3_BUCKET"
          upload_dir: "${PROJECT_NAME}/${ARTIFACT_ID}/build"
          local_dir: "$DIST_DIR"
          acl: private
          on:
            repo: "$TRAVIS_REPO_SLUG"
          access_key_id: "$AWS_ACCESS_KEY_ID"
          secret_access_key: "$AWS_SECRET_ACCESS_KEY"

    - stage: artifact
      language: python
      python: '3.6'
      install:
        - npm install -g serverless
        - npm install
        - pip install awscli
      script:
        # We reuse the artifacts from the build stage which we place into tmp.
        - mkdir tmp
        - aws s3 cp s3://${S3_BUCKET}/${S3_BUILD_PREFIX}/${PROJECT_NAME}.zip ./
        - aws s3 cp s3://${S3_BUCKET}/${S3_BUILD_PREFIX}/serverless.yml ./tmp/
        - unzip ${PROJECT_NAME}.zip -d tmp
        - cd tmp
        - mkdir $DIST_DIR
        - cp ../${PROJECT_NAME}.zip $DIST_DIR
        - AWS_ADM_STACK_NAME=${AWS_ADM_STACK_NAME} sls sam export --output ${DIST_DIR}/${AWS_SAM_TMPL_NAME} --codeuri s3://${S3_BUCKET}/${S3_DEPLOY_ARTIFACT}
        - aws cloudformation package --template-file ${DIST_DIR}/${AWS_SAM_TMPL_NAME} --output-template-file ${DIST_DIR}/${AWS_CFN_TMPL_NAME} --s3-bucket ${S3_BUCKET} --s3-prefix ${S3_DEPLOY_PREFIX}
      deploy:
        - provider: s3
          skip_cleanup: true
          bucket: "$S3_BUCKET"
          upload_dir: "${PROJECT_NAME}/${ARTIFACT_ID}/deploy"
          local_dir: "$DIST_DIR"
          acl: public_read
          on:
            repo: "$TRAVIS_REPO_SLUG"
          access_key_id: "$AWS_ACCESS_KEY_ID"
          secret_access_key: "$AWS_SECRET_ACCESS_KEY"

    - stage: promote
      language: python
      python: '3.6'
      install:
        - pip install awscli
      script: skip

      # FIXME: There's still an issue with browser caching an old link. May
      # need to look at rewriting the contents of the file.
      deploy:
        - provider: script
          script: aws s3api put-object --acl public-read --bucket $S3_BUCKET --key ${PROJECT_NAME}/CFN-DEPLOY-LATEST --website-redirect-location "https://console.aws.amazon.com/cloudformation/home?region=${AWS_DEFAULT_REGION}#/stacks/new?stackName=${PROJECT_NAME}&templateURL=https://${S3_BUCKET}.s3.amazonaws.com/${S3_DEPLOY_PREFIX}/${AWS_CFN_TMPL_NAME}" --cache-control "max-age=60"
          on:
            repo: "$TRAVIS_REPO_SLUG"
        - provider: script
          script: aws s3api put-object --acl public-read --bucket $S3_BUCKET --key ${PROJECT_NAME}/SAM-TEMPLATE-LATEST --website-redirect-location "https://${S3_BUCKET}.s3.amazonaws.com/${S3_DEPLOY_PREFIX}/${AWS_SAM_TMPL_NAME}" --cache-control "max-age=60"
          on:
            repo: "$TRAVIS_REPO_SLUG"



